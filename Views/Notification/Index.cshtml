@model IEnumerable<Notification>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Notifications";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = User.IsInRole("Admin");

}

<div class="container py-4">
    <h1 class="text-center mb-4">@ViewData["Title"]</h1>
    <div class="row justify-content-center">
        @if(Model.Any())
        {
            @foreach (var item in Model)
            {
                <div class="col-md-10 mb-4">
                    <div class="card shadow-sm border-0">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div>
                                <strong>@Html.DisplayFor(modelItem => item.LastModifiedBy.UserName)</strong>
                                <small class="text-muted"> (@Html.DisplayFor(modelItem => item.LastModifiedAt))</small>
                            </div>
                            <div>
                                @if(isAdmin)
                                {
                                    @if(!item.IsCleared)
                                    {
                                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-primary btn-sm">
                                            Edit
                                        </a>
                                    }
                                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm">
                                        Delete
                                    </a>
                                }
                                else
                                {
                                    <form asp-action="Clear" method="post" style="display:inline;">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button type="submit" class="btn btn-outline-danger btn-sm">
                                            <i class="fas fa-check"></i> Clear
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="overflow" style="max-height: 300px;">
                                <dl class="row">
                                    <dd class="mb-3">@Html.DisplayFor(modelItem => item.Content)</dd>
                                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                                    {
                                        <dt class = "col-sm-3">
                                            @Html.DisplayNameFor(model => model.LastModifiedAt)
                                        </dt>
                                        <dd class = "col-sm-9">
                                            @Html.DisplayFor(modelItem => item.LastModifiedAt)
                                        </dd>
                                        <dt class="col-sm-3">
                                             @Html.DisplayNameFor(model => model.LastModifiedBy)
                                        </dt>
                                        <dd class="col-sm-9">
                                            @item.LastModifiedBy?.UserName
                                        </dd>
                                    }  
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center">
                <p>No notifications available for you at this time.</p>
            </div> 
        }
    </div>
</div>
