@model IEnumerable<WishForm>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Wish Forms";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = User.IsInRole("Admin");
    var IsSignedIn = SignInManager.IsSignedIn(User);
    var userWishForms = !IsSignedIn ? [] : (isAdmin ? Model : Model.Where(w => w.CreatedBy.Id == currentUser.Id));
}
<div class="container py-4">
    <h1 class="text-center mb-4">@ViewData["Title"]</h1>

   <div class="row justify-content-center">
        <div class="col-md-6 mb-4 mt-3">
            <a asp-action="Create" class="text-decoration-none">
                <div class="card shadow" style="height: 100%;">
                    <div class="card-body text-center d-flex align-items-center justify-content-center">
                        <div>
                            <i class="fas fa-plus fa-2x"></i>
                            <p class="mt-2">Send new Wish Form</p>
                        </div>
                    </div>
                </div>
            </a>
        </div>



    @foreach (var item in userWishForms)
    {
        <div class="col-md-6 mb-4 mt-3">
            <div class="card shadow">
                <div class="card-header">
                    <a asp-action="Details" asp-route-id="@item.Id"><h1 class="card-title"><i class="fas fa-arrow-right"></i> @Html.DisplayFor(modelItem => item.Destination)</h1></a>
                </div>
                <div class="card-body">
                    <div class="overflow" style="max-height: 300px;">
                        <dl class="row">
                            @if (item.DepartureDate.HasValue)
                            {
                                <dt class="col-sm-5">Departure Date:</dt>
                                <dd class="col-sm-7">@Html.DisplayFor(modelItem => item.DepartureDate)</dd>
                            }

                            @if (item.Duration != null)
                            {
                                <dt class="col-sm-5">Duration:</dt>
                                <dd class="col-sm-7">@Html.DisplayFor(modelItem => item.Duration)</dd>
                            }

                            @if (item.Budget != null)
                            {
                                <dt class="col-sm-5">Budget:</dt>
                                <dd class="col-sm-7">@Html.DisplayFor(modelItem => item.Budget)</dd>
                            }

                            @if (item.Interests != null)
                            {
                                <dt class="col-sm-5">Interests:</dt>
                                <dd class="col-sm-7">@Html.DisplayFor(modelItem => item.Interests)</dd>
                            }

                            @if (item.AdditionalNotes != null)
                            {
                                <dt class="col-sm-5">Additional Notes:</dt>
                                <dd class="col-sm-7">@Html.DisplayFor(modelItem => item.AdditionalNotes)</dd>
                            }
                        </dl>


                    </div>
                </div>

                <div class="card-footer text-muted">
                    Submission Date: <small>@Html.DisplayFor(modelItem => item.SubmissionDate)</small>
                </div>
                <div class="btn-group">
                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-primary">Edit</a>
                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger">Delete</a>
                </div>
                
            </div>
        </div>
    }
</div>
